version: "3"

services:
  vaultwarden_postgresql:
    image: docker.io/library/postgres:12-alpine
    container_name: vaultwarden_postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - vaultwarden_database:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 
      POSTGRES_USER: vaultwarden
      POSTGRES_DB: vaultwarden
    networks:
      proxy:

  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server:latest
    volumes:
      - '/home/ubuntu/docker/vaultwarden/:/data/'
    depends_on:
      - vaultwarden_postgresql
    restart: unless-stopped
    networks:
      proxy:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.vaultwarden.entrypoints=http"
      - "traefik.http.routers.vaultwarden.rule=Host(`vaultwarden.yourdomain.com`)"
      - "traefik.http.middlewares.vaultwarden-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.vaultwarden.middlewares=vaultwarden-https-redirect"
      - "traefik.http.routers.vaultwarden-secure.entrypoints=https"
      - "traefik.http.routers.vaultwarden-secure.rule=Host(`vaultwarden.yourdomain.com`)"
      - "traefik.http.routers.vaultwarden-secure.tls=true"
      - "traefik.http.routers.vaultwarden-secure.service=vaultwarden"
      - "traefik.http.services.vaultwarden.loadbalancer.server.port=80"
      - "traefik.docker.network=proxy"
    security_opt:
      - no-new-privileges:true
volumes:
  vaultwarden_database:
    driver: local

networks:
  proxy:
    external: true